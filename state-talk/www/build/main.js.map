{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/task-data/task-data.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/state/reducers.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;ACV0C;AAG6B;AAMvE,IAAa,QAAQ;IAEnB,kBAAoB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;IAExC,CAAC;IAED,mCAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAEH,eAAC;AAAD,CAAC;AAVY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;aAGwC;AAQzC;SAVY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;;ACTsB;AACN;AACN;AAE/B;;;;;EAKE;AAEF,IAAa,gBAAgB;IAI3B,0BAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;IAEH,uBAAC;AAAD,CAAC;AARY,gBAAgB;IAD5B,yEAAU,EAAE;qCAKc,2DAAI;GAJlB,gBAAgB,CAQ5B;AAR4B;;;;;;;;;;;;ACX8C;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAGb;AACM;AACsB;AAE1B;AACE;AAwB5C,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IAtBrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,kEAAQ;SACT;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,CAAC;YAC1B,gEAAW,CAAC,YAAY,CAAC,gEAAO,CAAC;SAClC;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,kEAAQ;SACT;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;YACpD,wFAAgB;SACjB;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACpCoB;AACD;AACY;AACM;AAEb;AAI9C,IAAa,KAAK;IAIhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAHhF,aAAQ,GAAO,kEAAQ,CAAC;QAItB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IAC7B,CAAC;IACH,YAAC;AAAD,CAAC;AAhBY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAKgF;AAYjF;SAhBY,KAAK,2B;;;;;;;;;;;;;ACT4B;AAET;AACM;AACR;AAGnC,IAAM,QAAQ,GAAG;IACf,KAAK,EAAE,+CAAiB;IACxB,QAAQ,EAAE,kDAAoB;IAC9B,IAAI,EAAE,8CAAgB;CACvB,CAAC;AAGI,iBAAkB,KAAU,EAAE,MAAW;IAC3C,4EAAe,CAAC,QAAQ,CAAC;AAC7B,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 108\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","import { Component } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { TaskDataProvider } from '../../providers/task-data/task-data';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(private td: TaskDataProvider) {\n\n  }\n\n  markTaskComplete(task){\n    task.complete = true;\n  }\n\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the TaskDataProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class TaskDataProvider {\n\n  tasks;\n\n  constructor(public http: Http) {    \n    this.tasks = http.get(\"/get-tasks\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/task-data/task-data.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { TaskDataProvider } from '../providers/task-data/task-data';\n\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from '../state/reducers';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    StoreModule.provideStore(reducer),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    TaskDataProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n  tasks;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n\n  handleUpdate(task){\n    this.tasks[task.id] = task;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { combineReducers } from '@ngrx/store';\n\nimport * as fromTasks from './tasks';\nimport * as fromProjects from './projects';\nimport * as fromUser from './user';\n\n\nconst reducers = {\n  tasks: fromTasks.reducer,\n  projects: fromProjects.reducer,\n  user: fromUser.reducer,\n};\n\n\nexport function reducer(state: any, action: any) {\n    combineReducers(reducers)\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers.ts"],"sourceRoot":""}